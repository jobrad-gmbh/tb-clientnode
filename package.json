{
  "name": "clientnode",
  "version": "3.0.859",
  "description": "upgrade to object orientated rock solid plugins",
  "keywords": [
    "client",
    "tools",
    "node",
    "polymorph",
    "jquery"
  ],
  "homepage": "https://torben.website/clientnode",
  "bugs": {
    "email": "info@torben.website",
    "url": "https://github.com/thaibault/clientnode/issues"
  },
  "license": "CC-BY-3.0",
  "author": {
    "name": "Torben Sickert",
    "email": "info@torben.website",
    "url": "https://torben.website"
  },
  "files": [
    "index.d.ts",
    "index.js",
    "property-types.d.ts",
    "property-types.js",
    "testHelper.d.ts",
    "testHelper.js",
    "type.d.ts",
    "type.js"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/thaibault/clientnode"
  },
  "scripts": {
    "build": "yarn build:types; yarn build:plain",
    "build:alternate": "command='babel --plugins @babel/plugin-proposal-class-properties,@babel/plugin-transform-runtime --presets @babel/preset-env,@babel/preset-typescript --source-maps inline --out-file' && $command index.js index.ts && $command property-types.js property-types.ts && yarn make:executable",
    "build:export": "weboptimizer build '{__reference__: \"target:export\"}'",
    "build:export:compatible": "weboptimizer build '{__reference__: [\"target:export\", \"target:compatible\"]}'",
    "build:plain": "weboptimizer build",
    "build:types": "weboptimizer build:types",
    "check": "yarn check:types; yarn lint",
    "check:types": "weboptimizer check:types",
    "clear": "weboptimizer clear",
    "document": "weboptimizer document",
    "lint": "weboptimizer lint",
    "make:executable": "node --eval \"fs.chmodSync('index.js', '700')\"",
    "prepare": "if ! yarn build; then echo You should rerun install procedure to resolve dependency cycle. && yarn build:alternate; fi",
    "serve": "weboptimizer serve",
    "start": "yarn serve",
    "test": "weboptimizer test",
    "test:browser": "weboptimizer test:browser",
    "test:coverage": "weboptimizer test:coverage",
    "test:coverage:report": "weboptimizer test:coverage:report",
    "update": "yarn version --patch && yarn publish",
    "update:documentation": "documentationWebsite --log-level info",
    "watch": "weboptimizer build --watch"
  },
  "devDependencies": {
    "@babel/cli": "*",
    "@babel/eslint-parser": "*",
    "@babel/plugin-transform-proto-to-assign": "*",
    "@types/ejs": "*",
    "@types/favicons": "*",
    "@types/html-minifier": "*",
    "@types/imagemin": "*",
    "@types/jest": "*",
    "@types/jquery": "*",
    "@types/jsdom": "*",
    "@types/mini-css-extract-plugin": "*",
    "@types/node": "*",
    "@types/prop-types": "*",
    "@types/rimraf": "*",
    "@types/webpack-env": "*",
    "@types/workbox-webpack-plugin": "*",
    "@typescript-eslint/eslint-plugin": "*",
    "@typescript-eslint/parser": "*",
    "documentation-website": "*",
    "eslint": "*",
    "eslint-config-google": "*",
    "eslint-plugin-jsdoc": "*",
    "favicons-webpack-plugin": "*",
    "image-minimizer-webpack-plugin": "*",
    "jest": "*",
    "jquery": "*",
    "jsdoc": "*",
    "node-fetch": "*",
    "prop-types": "*",
    "rimraf": "*",
    "weboptimizer": "*",
    "webpack-dev-server": "*"
  },
  "peerDependencies": {
    "@babel/runtime": "*",
    "jquery": "*",
    "node-fetch": "*",
    "prop-types": "*"
  },
  "peerDependenciesMeta": {
    "@babel/runtime": {
      "optional": true
    },
    "jquery": {
      "optional": true
    },
    "node-fetch": {
      "optional": true
    },
    "prop-types": {
      "optional": true
    }
  },
  "engines": {
    "node": ">=14",
    "npm": ">=7"
  },
  "resolutions": {
    "@types/webpack": "https://registry.yarnpkg.com/@favware/skip-dependency/-/skip-dependency-1.1.1.tgz"
  },
  "sideEffects": false,
  "documentationWebsite": {
    "languages": [
      "deDE",
      "enUS"
    ],
    "name": "clientnode",
    "tagline": "upgrade to object orientated rock solid plugins<!--deDE:Schreibe Objekt orientierte solide Plugins-->",
    "trackingCode": "UA-40192634-7"
  },
  "webOptimizer": {
    "debug": {
      "module": {
        "optimizer": {
          "babelMinify": {
            "module": null
          }
        }
      }
    },
    "commandLine": {
      "test": {
        "environments": [
          "jsdom",
          "node"
        ]
      }
    },
    "files": {
      "compose": {
        "cascadingStyleSheet": null
      }
    },
    "module": {
      "aliases": {
        "#": "Ensure that dependent modules uses latest clientnode version.",
        "clientnode$": "../../index",
        "clientnode/property-types$": "../../property-types",
        "clientnode/type$": "../../type",
        "formdata-polyfill/esm.min.js$": "formdata-polyfill",
        "jquery$": "jquery/dist/jquery.min"
      },
      "optimizer": {
        "babelMinify": {
          "bundle": {
            "transform": {
              "#": "To provide a logging output we need to exclude this feature.",
              "removeConsole": false
            }
          },
          "#": "Avoids TypeError: Cannot read property 'removeBinding' of null.",
          "module": null
        }
      }
    },
    "#": "Do not touch nodes environment variables on static builds to allow \"prop-types\" conditional exports.",
    "nodeENV": {
      "__evaluate__": "2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2] === 'serve' ? null : false"
    },
    "target:compatible": {
      "module": {
        "preprocessor": {
          "javaScript": {
            "options": {
              "plugins": {
                "__append__": "@babel/plugin-transform-proto-to-assign"
              }
            }
          }
        }
      }
    },
    "target:export": {
      "module": {
        "preprocessor": {
          "javaScript": {
            "options": {
              "plugins": {
                "__remove__": "@babel/plugin-transform-runtime"
              }
            }
          }
        }
      }
    },
    "test": {
      "injection": {
        "external": {
          "implicit": {
            "pattern": {
              "exclude": {
                "#": "NOTE: Theses files are ECMAscript file so have to be processed to work with test-runner.",
                "__append__": [
                  {
                    "__evaluate__": "/^(.+\\/)?data-uri-to-buffer(\\/.+)?$/"
                  },
                  {
                    "__evaluate__": "/^(.+\\/)?fetch-blob(\\/.+)?$/"
                  },
                  {
                    "__evaluate__": "/^(.+\\/)?node-fetch(\\/.+)?$/"
                  }
                ]
              }
            }
          }
        }
      }
    }
  },
  "dependencies": {
    "@types/webpack": "https://registry.yarnpkg.com/@favware/skip-dependency/-/skip-dependency-1.1.1.tgz"
  }
}
