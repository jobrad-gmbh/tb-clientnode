{
  "name": "clientnode",
  "version": "3.0.479",
  "license": "CC-BY-3.0",
  "description": "upgrade to object orientated rock solid plugins",
  "homepage": "https://torben.website/clientnode",
  "documentationWebsite": {
    "languages": [
      "deDE",
      "enUS"
    ],
    "name": "clientnode",
    "tagline": "upgrade to object orientated rock solid plugins<!--deDE:Schreibe Objekt orientierte solide Plugins-->",
    "trackingCode": "UA-40192634-7"
  },
  "keywords": [
    "client",
    "tools",
    "node",
    "polymorph",
    "jquery"
  ],
  "files": [
    "index.ts",
    "type.ts"
  ],
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/thaibault/clientnode"
  },
  "scripts": {
    "build": "weboptimizer build",
    "build:alternate": "babel --plugins @babel/plugin-proposal-class-properties,@babel/plugin-transform-runtime --presets @babel/env,@babel/preset-typescript --source-maps inline --out-file index.js index.ts && yarn make:executable",
    "build:export": "weboptimizer build '{__reference__: \"target:export\"}'",
    "build:export:compatible": "weboptimizer build '{__reference__: [\"target:export\", \"target:compatible\"]}'",
    "check": "yarn check:types; yarn lint",
    "check:types": "weboptimizer check:types",
    "clear": "weboptimizer clear",
    "document": "weboptimizer document",
    "lint": "weboptimizer lint",
    "make:executable": "node --eval \"fs.chmodSync('index.js', '700')\"",
    "prepare": "if ! yarn build; then echo You should rerun install procedure to resolve dependency cycle. && yarn build:alternate; fi",
    "report:coverage": "nyc report --reporter=text-lcov | coveralls",
    "serve": "weboptimizer serve",
    "start": "yarn serve",
    "test": "weboptimizer test",
    "test:browser": "weboptimizer test:browser",
    "update": "yarn version --patch && yarn publish",
    "update:documentation": "documentationWebsite --log-level info",
    "watch": "weboptimizer build --watch"
  },
  "devDependencies": {
    "@babel/cli": "*",
    "@babel/plugin-transform-proto-to-assign": "*",
    "@types/ejs": "*",
    "@types/html-minifier": "*",
    "@types/jest": "*",
    "@types/jquery": "*",
    "@types/jsdom": "*",
    "@types/loader-utils": "*",
    "@types/node": "*",
    "@types/node-fetch": "*",
    "@typescript-eslint/eslint-plugin": "*",
    "@typescript-eslint/parser": "*",
    "babel-eslint": "*",
    "babel-plugin-transform-modern-regexp": "*",
    "documentation-website": "*",
    "eslint": "*",
    "eslint-config-google": "*",
    "eslint-plugin-jsdoc": "*",
    "jest": "*",
    "jquery": "*",
    "jsdoc": "*",
    "node-fetch": "*",
    "rimraf": "*",
    "weboptimizer": "*",
    "webpack": "*",
    "webpack-cli": "*",
    "webpack-dev-server": "*"
  },
  "peerDependencies": {
    "@babel/runtime": "*",
    "jquery": "*"
  },
  "sideEffects": false,
  "webOptimizer": {
    "debug": {
      "module": {
        "optimizer": {
          "babelMinify": {
            "module": null
          }
        }
      }
    },
    "commandLine": {
      "test": {
        "environments": [
          "jsdom",
          "node"
        ]
      }
    },
    "files": {
      "compose": {
        "cascadingStyleSheet": null
      }
    },
    "module": {
      "aliases": {
        "#": "Ensure that dependent modules uses latest clientnode version.",
        "clientnode$": "../../index",
        "clientnode/type$": "../../type",
        "jquery$": "jquery/dist/jquery.min"
      },
      "optimizer": {
        "babelMinify": {
          "module": {
            "#": "For Task \"test\", this module would produce this error \"ERROR in ./test.ts Module build failed (from ./node_modules/babel-loader/lib/index.js): TypeError: clientnode/test.ts: Cannot read property 'end' of null\".",
            "evaluate": false,
            "#0": "For external task \"clear\", this module would produce this error \"UnhandledPromiseRejectionWarning: TypeError: Cannot create property 'next' on string '.dynamicConfiguration-0.json' at Function.<anonymous> (clientnode/index.js:1:80221)\".",
            "mangle": false,
            "#1": "To provide a generic logging mechanism we need this feature to be exported.",
            "removeConsole": false
          }
        }
      },
      "preprocessor": {
        "javaScript": {
          "options": {
            "plugins": {
              "#": "Can be removed when stage-3 proposals like \"https://github.com/tc39/proposal-regexp-named-groups\" has been implemented.",
              "__append__": [
                [
                  "transform-modern-regexp",
                  {
                    "features": [
                      "dotAll",
                      "namedCapturingGroups"
                    ]
                  }
                ]
              ]
            }
          }
        }
      }
    },
    "target:compatible": {
      "module": {
        "preprocessor": {
          "javaScript": {
            "options": {
              "plugins": {
                "__append__": "@babel/plugin-transform-proto-to-assign"
              }
            }
          }
        }
      }
    },
    "target:export": {
      "module": {
        "preprocessor": {
          "javaScript": {
            "options": {
              "plugins": {
                "__remove__": "@babel/plugin-transform-runtime"
              }
            }
          }
        }
      }
    }
  }
}
