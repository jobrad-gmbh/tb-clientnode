{
  "_from": "clientnode@^1.0.225",
  "_id": "clientnode@1.0.227",
  "_inBundle": false,
  "_integrity": "sha512-AsWaIl0CHlfFUTqCtWtF4lP5kLpFijJyahdnVZLT0l4PdzVGRN92Ekr8cuyT2oll9q/MIslr3omyEvGt3IEXsw==",
  "_location": "/clientnode",
  "_phantomChildren": {
    "add-asset-html-webpack-plugin": "2.0.1",
    "anymatch": "1.3.0",
    "async-each": "1.0.1",
    "babel-core": "6.25.0",
    "babel-loader": "7.1.1",
    "babel-plugin-transform-flow-strip-types": "6.22.0",
    "babel-plugin-transform-runtime": "6.23.0",
    "babel-plugin-transform-with": "1.0.0",
    "babel-preset-babili": "0.1.4",
    "babel-preset-es2017": "6.24.1",
    "babel-preset-es2017-node7": "0.5.2",
    "babel-preset-modern-browsers": "9.0.2",
    "babel-preset-stage-0": "6.24.1",
    "babel-runtime": "6.23.0",
    "babili-webpack-plugin": "0.1.2",
    "clientnode": "1.0.227",
    "css-loader": "0.28.4",
    "ejs": "2.5.6",
    "exists-stat": "1.0.0",
    "exports-loader": "0.6.4",
    "extract-loader": "0.1.0",
    "extract-text-webpack-plugin": "3.0.0",
    "favicons-webpack-plugin": "0.0.7",
    "file-loader": "0.11.2",
    "findup-sync": "0.4.3",
    "fsevents": "1.1.2",
    "glob-parent": "2.0.0",
    "graceful-readlink": "1.0.1",
    "html-loader": "0.4.5",
    "html-minifier": "3.5.2",
    "html-webpack-plugin": "2.29.0",
    "imagemin-webpack-plugin": "1.5.0-beta.0",
    "imports-loader": "0.7.1",
    "inherits": "2.0.3",
    "is-binary-path": "1.0.1",
    "is-glob": "2.0.1",
    "js-reporters": "1.2.0",
    "jsdom": "11.1.0",
    "loader-utils": "1.1.0",
    "offline-plugin": "4.8.3",
    "open-browser-webpack-plugin": "0.0.5",
    "path-is-absolute": "1.0.1",
    "postcss-cssnext": "3.0.2",
    "postcss-fontpath": "0.3.0",
    "postcss-import": "10.0.0",
    "postcss-loader": "2.0.6",
    "postcss-sprites": "4.2.1",
    "postcss-url": "7.0.0",
    "readdirp": "2.1.0",
    "resolve": "1.3.2",
    "rimraf": "2.6.1",
    "script-loader": "0.7.0",
    "style-loader": "0.18.2",
    "stylelint-config-standard": "16.0.0",
    "url-loader": "0.5.9",
    "walk-sync": "0.3.1",
    "webpack-load-plugins": "0.1.2",
    "webpack-sources": "1.0.1"
  },
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "clientnode@^1.0.225",
    "name": "clientnode",
    "escapedName": "clientnode",
    "rawSpec": "^1.0.225",
    "saveSpec": null,
    "fetchSpec": "^1.0.225"
  },
  "_requiredBy": [
    "/clientnode/weboptimizer",
    "/website-utilities"
  ],
  "_resolved": "https://registry.npmjs.org/clientnode/-/clientnode-1.0.227.tgz",
  "_shasum": "da9a0d177b1212cb97da00c9abd251c7dabbbd4e",
  "_spec": "clientnode@^1.0.225",
  "_where": "/home/torben/cloud/data/repository/public/clientNode/node_modules/website-utilities",
  "bugs": {
    "url": "https://github.com/thaibault/clientNode/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "qunitjs": "^2.4.0",
    "weboptimizer": "^1.0.347"
  },
  "deprecated": false,
  "description": "upgrade to object orientated rock solid plugins",
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-eslint": "^7.2.3",
    "babel-plugin-transform-proto-to-assign": "^6.23.0",
    "babel-polyfill": "^6.23.0",
    "babel-preset-env": "^1.6.0",
    "documentation-website": "^1.0.62",
    "eslint": "^4.2.0",
    "eslint-config-google": "^0.9.1",
    "eslint-plugin-flowtype": "^2.35.0",
    "eslint-plugin-jsdoc": "^3.1.1",
    "flow-bin": "^0.50.0",
    "jquery": "^3.2.1",
    "jsdoc": "^3.5.3",
    "rimraf": "^2.6.1",
    "source-map-support": "^0.4.15",
    "webpack": "^3.2.0",
    "webpack-dev-server": "^2.5.1"
  },
  "documentationWebsite": {
    "languages": [
      "deDE",
      "enUS"
    ],
    "name": "clientNode",
    "tagline": "upgrade to object orientated rock solid plugins<!--deDE:Schreibe Objekt orientierte solide Plugins-->",
    "trackingCode": "UA-40192634-7"
  },
  "files": [
    "index.js",
    "test.js",
    "test.compiled.js"
  ],
  "homepage": "http://torben.website/clientNode",
  "keywords": [
    "client",
    "tools",
    "node",
    "polymorph",
    "jquery"
  ],
  "license": "CC-BY-3.0",
  "main": "index.compiled.js",
  "name": "clientnode",
  "peerDependencies": {
    "jquery": "*"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/thaibault/clientNode.git"
  },
  "scripts": {
    "build": "webOptimizer build && npm run build:test",
    "build:alternatively": "babel --plugins transform-flow-strip-types,transform-runtime --presets modern-browsers,es2017,stage-0 --source-maps inline --out-file index.compiled.js index.js && npm run buildTest",
    "build:dll": "webOptimizer build:dll",
    "build:test": "babel --plugins transform-flow-strip-types,transform-runtime --presets modern-browsers,es2017,stage-0 --source-maps inline --out-file test.compiled.js test.js",
    "clear": "webOptimizer clear",
    "document": "webOptimizer document",
    "export": "webOptimizer build '{development:{tool:false},module:{preprocessor:{javaScript:{options:{plugins:{__remove__:\"transform-runtime\"}}}}}}' && npm run buildTest",
    "export:compatible": "webOptimizer build '{development:{tool:false},module:{preprocessor:{javaScript:{options:{plugins:{__remove__:\"transform-runtime\",__append__:\"transform-proto-to-assign\"},presets:[\"env\",\"stage-0\"]}}}}}' && npm run buildTest",
    "lint": "webOptimizer check:type; webOptimizer lint",
    "prepare": "if ! npm run build; then echo You should rerun install procedure to resolve dependency cycle. && npm run buildAlternatively; fi",
    "serve": "webOptimizer serve",
    "start": "npm run serve",
    "test": "webOptimizer test",
    "test:browser": "webOptimizer test:browser",
    "update": "npm version patch && npm publish",
    "update:documentation": "documentationWebsite --log-level info",
    "watch": "webOptimizer build --watch",
    "watch:dll": "webOptimizer build:dll --watch"
  },
  "version": "1.0.227",
  "webOptimizer": {
    "injection": {
      "external": {
        "aliases": {
          "jquery": "jQuery"
        }
      },
      "internal": {
        "vendor": {
          "__evaluate__": "self.debug && 2 < self.givenCommandLineArguments.length && ['build:dll', 'serve', 'test:browser', 'watch:dll'].includes(self.givenCommandLineArguments[2]) ? ['babel-polyfill'].concat(self.givenCommandLineArguments[2] === 'serve' ? [] : ['script!qunitjs', 'weboptimizer/browserAPI']) : []"
        }
      }
    },
    "module": {
      "aliases": {
        "clientnode$": "./index",
        "jquery$": "jquery/dist/jquery.min"
      },
      "optimizer": {
        "babili": null
      },
      "preprocessor": {
        "javaScript": {
          "options": {
            "presets": {
              "__evaluate__": "(self.targetTechnology === 'node' ? ['es2017-node7'] : [['modern-browsers', {loose: true}], 'es2017']).concat('stage-0')"
            }
          }
        }
      },
      "skipParseRegularExpressions": {
        "__evaluate__": "/\\/(?:(?:jquery\\/dist\\/jquery)|(?:webpack\\/buildin\\/global)|(?:webpack\\/buildin\\/module))(?:\\.min)?\\.js(?:\\?.+|$)/"
      }
    }
  }
}
